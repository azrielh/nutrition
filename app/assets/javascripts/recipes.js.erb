$(document).ready(function() {
  var keyupTimeout;

  $(document).on("keyup", ".search-term", function(){
    clearTimeout(keyupTimeout);
    var self = this;
    keyupTimeout = setTimeout(function() {
      var value = self.value;
      var $form = $(self).parents('.ingredient');
      var callback = function (data) {
        //normalising the data??? should refactor to the model - store ingredient data as is
        $form.find('.calories-field').val(data[0].nf_calories/data[0].nf_serving_weight_grams);
        $form.find('.total-fat-field').val(data[0].nf_total_fat/data[0].nf_serving_weight_grams);
        $form.find('.saturated-fat-field').val(data[0].nf_saturated_fat/data[0].nf_serving_weight_grams);
        $form.find('.trans-fat-field').val(data[0].nf_trans_fatty_acid/data[0].nf_serving_weight_grams);
        // sodium and cholestrol are returned in mg
        $form.find('.cholesterol-field').val((data[0].nf_cholesterol / 1000) /data[0].nf_serving_weight_grams);
        $form.find('.sodium-field').val((data[0].nf_sodium / 1000) / data[0].nf_serving_weight_grams);
        $form.find('.total-carbs-field').val(data[0].nf_total_carbohydrate/data[0].nf_serving_weight_grams);
        $form.find('.dietary-fiber-field').val(data[0].nf_dietary_fiber/data[0].nf_serving_weight_grams);
        $form.find('.sugars-field').val(data[0].nf_sugars/data[0].nf_serving_weight_grams);
        $form.find('.protein-field').val(data[0].nf_protein/data[0].nf_serving_weight_grams);
        $form.find('.vitamin-a-field').val(data[0].nf_vitamin_a_dv/data[0].nf_serving_weight_grams);
        $form.find('.vitamin-c-field').val(data[0].nf_vitamin_c_dv/data[0].nf_serving_weight_grams);
        $form.find('.calcium-field').val(data[0].nf_calcium_dv/data[0].nf_serving_weight_grams);
        $form.find('.iron-field').val(data[0].nf_iron_dv/data[0].nf_serving_weight_grams);
        $form.find('.ingredient-id-field').val(data[0].item_id);
        $form.find('.serving-weight-field').val(data[0].nf_serving_weight_grams);
        // debugger
      };
      search(value, callback);

    }, 500);
  });

  var r_query = {
      "appId":'<%= ENV["NUTRITIONIX_API_KEY"] %>',
      "appKey":'<%= ENV["NUTRITIONIX_API_SECRET"] %>',
      "fields":"item_name,brand_name,item_id,nf_calories,nf_total_fat,nf_saturated_fat,nf_trans_fatty_acid,nf_cholesterol,nf_sodium,nf_total_carbohydrate,nf_dietary_fiber,nf_sugars,nf_protein,nf_vitamin_a_dv,nf_vitamin_c_dv,nf_calcium_dv,nf_iron_dv,nf_serving_weight_grams,nf_serving_size_qty,nf_serving_size_unit",
      "sort":{
        "field":"_score",
        "order":"desc"
      },
      "min_score":1.5,
      "filters":{
        "not": {
          "item_type":1,
          "item_type":2,
        },
        "item_type":3,
        "nf_serving_weight_grams":{
          "gte":0
        },
        "nf_calories":{
          "gte":0
        },
        "nf_cholesterol":{
          "gte":0
        },
        "nf_total_fat":{
          "gte":0
        },
        "nf_sodium":{
          "gte":0
        },
      }
    };

  function search (input, callback) {
    $.ajax({
      url:
      'https://api.nutritionix.com/v1_1/search/' + encodeURIComponent(input),
      type: 'GET',
      data: r_query,
      error: function (request, errorType, errorMessage) {
      alert('Error: ' + errorType + ' with message: ' + errorMessage);
      },
      timeout: 5000,
      // loading graphic, not needed - response is fast...
      // beforeSend: function(){
      //  $('.loading-animation').addClass('loading6');
      // },
      // complete: function(){
      //  $('.loading-animation').removeClass('loading6');
      // },
      success: function (data) {
        var result = data.hits.map(function (datum) { return datum.fields });
        var item_names = result.map(function(datum) { return datum.item_name });
        callback(result);
        $( ".search-items" ).autocomplete({
          source: item_names,
        });
      }
    });
  }

  // Activating Best In Place
  jQuery(".best_in_place").best_in_place();
  // for the tooltips
  $(function () {
    $('[data-toggle="tooltip"]').tooltip()
  });

  $('.new-recipe').on('click', '.recipe-save-btn', function(){
    $('.loading-graphic').addClass('whirly-loader');
  });


  $('#filter-library').on("keyup", function(e){
    var searchTerm = $('#filter-library').val();
    if(e.keyCode == 8) {
    $(".title:not(:contains("+searchTerm+"))").parent().parent().fadeOut();
    $(".title:contains("+searchTerm+")").parent().parent().fadeIn();
    } else {
    $(".title:not(:contains("+searchTerm+"))").parent().parent().fadeOut();
    }
  });

});
